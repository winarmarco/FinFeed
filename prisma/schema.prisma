generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  followingIds   String[] @default([]) @db.ObjectId
  following      User[]   @relation("UserFollow", fields: [followingIds], references: [id])
  totalFollowing Int      @default(0)

  followersIds   String[] @default([]) @db.ObjectId
  followers      User[]   @relation("UserFollow", fields: [followersIds], references: [id])
  totalFollowers Int      @default(0)

  postsIds String[] @default([]) @db.ObjectId
  posts    Post[]

  savedPostIds String[] @default([]) @db.ObjectId
  savedPost    Post[]   @relation("SavedPosts", fields: [savedPostIds], references: [id])

  likedPostIds String[] @default([]) @db.ObjectId
  likedPost  Post[] @relation("LikedPosts", fields: [likedPostIds], references: [id])

  comment Comment[]


  userId        String
  firstName     String   @default("")
  lastName      String   @default("")
  username      String   @default("")
  imageUrl      String   @default("")
  hasImage      Boolean  @default(false)
  emailAddreses String[] @default([])
  phoneNumbers  String[] @default([])
}

model Post {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  authorId String @db.ObjectId
  author   User   @relation(fields: [authorId], references: [id])

  savedByIds String[] @default([]) @db.ObjectId
  savedBy    User[]   @relation("SavedPosts", fields: [savedByIds], references: [id])

  totalSaved Int @default(0)

  quoteId String @unique @db.ObjectId
  quote Quote @relation(fields: [quoteId], references: [id])

  predictionPrice Float
  blog            String

  commentIds  String[] @default([]) @db.ObjectId
  comments Comment[]

  totalComment Int @default(0)

  totalLike Int @default(0)

  likedById String[] @db.ObjectId
  likedBy User[] @relation("LikedPosts", fields: [likedById], references: [id])


  createdAt DateTime @default(now())
}

model Quote {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  post Post?

  currency  String
  exchange  String
  longName  String
  shortName String
  symbol    String
  typeDisp  String
  price     Float
}

model Comment {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  message String
  postId  String @db.ObjectId
  post Post @relation(fields:[postId], references: [id])

  authorId  String @db.ObjectId
  author  User  @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
}

